TwO-O-Player Math Game
———————————————
class: Player
initialize(name)
@lives: 3
@name: 'player 1' or 'player 2'
lose_life method
ask method?
answer method?

class: Turn
@turn_number
@asker
@answerer
ask method?
answer method?
winner? method
loser? method

class Player
  attr_accessor :lives, :name
  def initialize(player_number)
    @name = "Player #{player_number}"
    @lives = 3  
  end
  
  def lose_life
    self.lives -= 1
  end
end

class Turn # responsible to turn players
  condition:
  if player wins - move onto next question
  
  if player loses - call lose_life method from Class Player

  when the life reached to zero - the player has to lose

  print 
end

class Game
  def initialize
    @player1 = Player.new(1)
  end
  
end

Task 1: Class Nouns
player, turn, game

Task 2: Roles
player => keeps track of the player number and how many lives they have remaining, has a method to remove a life when a player answers wrong. Initialize with player#{player_number} and lives = 3

turn => keeps track of which player answering, as well as the question being asked and the answer provided, has methods to print out whether an answer is right, or print that an answer is wrong and call lose_life on the appropriate player and then call Game.new_turn?(current_player) method. Initialize with active player, number 1, number 2 (random between 1-20) and a simple addition question using these numbers

game => keeps track of if there is a winner or loser (initialize to nil), method to take in current player and print winner (if the current player lost) and their lives and end the game or start a new turn with the other player. Initialize player 1 and player 2 (Player.new(1), Player.new(2)), winner = nil

